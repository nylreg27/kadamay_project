# Generated by Django 4.2.23 on 2025-06-16 10:36

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('church', '0001_initial'),
        ('individual', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ContributionType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Contribution Type',
                'verbose_name_plural': 'Contribution Types',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_paid', models.DateField(default=django.utils.timezone.now)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('receipt_number', models.CharField(blank=True, help_text='Official Receipt (OR) number or internal reference.', max_length=100, null=True, unique=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('payment_method', models.CharField(choices=[('GCASH', 'GCash to GCash'), ('CASH', 'Cash on Hand')], default='CASH', help_text='Method of payment (e.g., Cash, GCash).', max_length=10)),
                ('payment_status', models.CharField(choices=[('PENDING_VALIDATION', 'Pending Validation'), ('VALIDATED', 'Validated'), ('CANCELLED', 'Cancelled'), ('DRAFT', 'Draft'), ('COMPLETED', 'Completed')], default='PENDING_VALIDATION', help_text='Current status of the payment (e.g., Pending Validation, Validated, Cancelled).', max_length=20)),
                ('validation_date', models.DateTimeField(blank=True, help_text='Date and time when the payment was validated.', null=True)),
                ('is_cancelled', models.BooleanField(default=False, help_text='Indicates if the receipt/payment has been cancelled.')),
                ('cancellation_reason', models.TextField(blank=True, help_text='Reason for cancelling the payment, if applicable.', null=True)),
                ('cancellation_date', models.DateTimeField(blank=True, help_text='Date and time when the payment was cancelled.', null=True)),
                ('is_legacy_record', models.BooleanField(default=False, help_text='True if this is an old record without a physical official receipt number.')),
                ('cancelled_by', models.ForeignKey(blank=True, help_text='User who marked the payment as cancelled.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payments_cancelled', to=settings.AUTH_USER_MODEL)),
                ('church', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payments', to='church.church')),
                ('collected_by', models.ForeignKey(blank=True, help_text='User who initially collected the payment (e.g., Church In-charge).', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payments_collected', to=settings.AUTH_USER_MODEL)),
                ('contribution_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payments', to='payment.contributiontype')),
            ],
            options={
                'verbose_name': 'Payment',
                'verbose_name_plural': 'Payments',
                'ordering': ['-date_paid', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PaymentIndividualAllocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('allocated_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('is_payer', models.BooleanField(default=False, help_text='True if this individual is the actual payer of this allocated amount.')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('individual', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payment_allocations', to='individual.individual')),
                ('payment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='individual_allocations', to='payment.payment')),
            ],
            options={
                'verbose_name': 'Payment Individual Allocation',
                'verbose_name_plural': 'Payment Individual Allocations',
                'ordering': ['-created_at'],
                'unique_together': {('payment', 'individual')},
            },
        ),
        migrations.AddField(
            model_name='payment',
            name='covered_members',
            field=models.ManyToManyField(blank=True, help_text='Individuals covered by this payment, with specific allocated amounts.', related_name='payments_covered', through='payment.PaymentIndividualAllocation', to='individual.individual'),
        ),
        migrations.AddField(
            model_name='payment',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payments_created', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='payment',
            name='deceased_member',
            field=models.ForeignKey(blank=True, help_text="If this payment is for a deceased member's contribution.", null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payments_for_deceased', to='individual.individual'),
        ),
        migrations.AddField(
            model_name='payment',
            name='individual',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payments', to='individual.individual'),
        ),
        migrations.AddField(
            model_name='payment',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payments_updated', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='payment',
            name='validated_by',
            field=models.ForeignKey(blank=True, help_text='Admin/Cashier who validated the payment.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payments_validated', to=settings.AUTH_USER_MODEL),
        ),
    ]
